apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: auth
    name: auth
  spec:
    ports:
    - name: "5003"
      port: 5003
      targetPort: 5003
    selector:
      io.kompose.service: auth
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: client
    name: client
  spec:
    ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
    selector:
      io.kompose.service: client
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: gateway-api
    name: gateway-api
  spec:
    ports:
    - name: "5000"
      port: 5000
      targetPort: 5000
    selector:
      io.kompose.service: gateway-api
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: identity
    name: identity
  spec:
    ports:
    - name: "5004"
      port: 5004
      targetPort: 5004
    selector:
      io.kompose.service: identity
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: images
    name: images
  spec:
    ports:
    - name: "5002"
      port: 5002
      targetPort: 5002
    selector:
      io.kompose.service: images
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: notifications
    name: notifications
  spec:
    ports:
    - name: "5001"
      port: 5001
      targetPort: 5001
    selector:
      io.kompose.service: notifications
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: postgres
    name: postgres
  spec:
    ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
    selector:
      io.kompose.service: postgres
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: posts
    name: posts
  spec:
    ports:
    - name: "5005"
      port: 5005
      targetPort: 5005
    selector:
      io.kompose.service: posts
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: redis
    name: redis
  spec:
    ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
    selector:
      io.kompose.service: redis
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: social
    name: social
  spec:
    ports:
    - name: "5006"
      port: 5006
      targetPort: 5006
    selector:
      io.kompose.service: social
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: auth
    name: auth
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: auth
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: auth
      spec:
        containers:
        - env:
          - name: POSTGRES_IP
            value: '"postgres"'
          - name: POSTGRES_PASSWORD
            value: '"123456"'
          - name: POSTGRES_PORT
            value: '"5432"'
          - name: REDIS_HOST
            value: '"redis"'
          image: auth:latest
          imagePullPolicy: ""
          name: auth
          ports:
          - containerPort: 5003
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: client
    name: client
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: client
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: client
      spec:
        containers:
        - env:
          - name: REACT_APP_API_GATEWAY_URL
            value: '"gateway_api:5000"'
          - name: REACT_APP_NOTIFICATION_SERVICE_URL
            value: '"notifications:5001"'
          image: client:latest
          imagePullPolicy: ""
          name: client
          ports:
          - containerPort: 3000
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: gateway-api
    name: gateway-api
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: gateway-api
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: gateway-api
      spec:
        containers:
        - env:
          - name: AUTH_SERVICE_API_URL
            value: '"auth:5003"'
          - name: IDENITY_SERVICE_API_URL
            value: '"identity:5004"'
          - name: POSTS_SERVICE_API_URL
            value: '"posts:5005"'
          - name: SOCIAL_SERVICE_API_URL
            value: '"social:5006"'
          image: gateway:latest
          imagePullPolicy: ""
          name: gateway-api
          ports:
          - containerPort: 5000
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: identity
    name: identity
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: identity
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: identity
      spec:
        containers:
        - env:
          - name: AUTH_SERVICE_API_URL
            value: '"auth:5003"'
          - name: POSTGRES_IP
            value: '"postgres"'
          - name: POSTGRES_PASSWORD
            value: '"123456"'
          - name: POSTGRES_PORT
            value: '"5432"'
          image: identity:latest
          imagePullPolicy: ""
          name: identity
          ports:
          - containerPort: 5004
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: images
    name: images
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: images
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: images
      spec:
        containers:
        - image: images:latest
          imagePullPolicy: ""
          name: images
          ports:
          - containerPort: 5002
          resources: {}
          volumeMounts:
          - mountPath: /data/public
            name: fakelook-images-volume
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: fakelook-images-volume
          persistentVolumeClaim:
            claimName: fakelook-images-volume
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: fakelook-images-volume
    name: fakelook-images-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: notifications
    name: notifications
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: notifications
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: notifications
      spec:
        containers:
        - image: notifications:latest
          imagePullPolicy: ""
          name: notifications
          ports:
          - containerPort: 5001
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: postgres
    name: postgres
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: postgres
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: postgres
      spec:
        containers:
        - env:
          - name: POSTGRES_DBNAME
            value: '"posts,auth,identity,social"'
          - name: POSTGRES_PASSWORD
            value: '"123456"'
          - name: POSTGRES_USER
            value: '"postgres"'
          image: kartoza/postgis:13.0
          imagePullPolicy: ""
          name: postgres
          ports:
          - containerPort: 5432
          resources: {}
          volumeMounts:
          - mountPath: /data/db
            name: fakelook-db-volume
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: fakelook-db-volume
          persistentVolumeClaim:
            claimName: fakelook-db-volume
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: fakelook-db-volume
    name: fakelook-db-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: posts
    name: posts
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: posts
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: posts
      spec:
        containers:
        - env:
          - name: AUTH_SERVICE_API_URL
            value: '"auth:5003"'
          - name: IMAGE_SERVER_URL
            value: '"images:5002"'
          - name: POSTGRES_IP
            value: '"postgres"'
          - name: POSTGRES_PASSWORD
            value: '"123456"'
          - name: POSTGRES_PORT
            value: '"5432"'
          image: posts:latest
          imagePullPolicy: ""
          name: posts
          ports:
          - containerPort: 5005
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: redis
    name: redis
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: redis
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: redis
      spec:
        containers:
        - image: redis
          imagePullPolicy: ""
          name: redis
          ports:
          - containerPort: 6379
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: social
    name: social
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: social
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\Users\Ido\kompose\kompose.exe convert -o kubernetes/manifest.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.service: social
      spec:
        containers:
        - env:
          - name: POSTGRES_IP
            value: postgres
          - name: POSTGRES_PASSWORD
            value: '"123456"'
          - name: POSTGRES_PORT
            value: '"5432"'
          image: social:latest
          imagePullPolicy: ""
          name: social
          ports:
          - containerPort: 5006
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
kind: List
metadata: {}

